--- teamspeak2-server_startscript	2004-03-09 04:40:07.000000000 -0800
+++ teamspeak2-server	2008-12-24 16:34:33.000000000 -0800
@@ -2,92 +2,83 @@
 # Copyright (c) 2004 TeamSpeak team   All rights reserved.
 #
 # Author: pwk.linuxfan 2004
-#
+# Modified: J.deSwart 2008
+
+. /etc/rc.conf
+. /etc/rc.d/functions
+. /etc/conf.d/tss2d
+
+if [ "$UID" != "0" ]; then
+	echo "Only root should start the server!"
+	exit 2
+fi
+
+if [ -z $TSS2_USER ]
+then
+	echo "Unable to start Teamspeak2 server. You must set the user in /etc/conf.d/tss2d"
+	exit 2
+fi
+
 
 case "$1" in
 	start)
-		if [ -e tsserver2.pid ]; then
-			echo "tsserver2.pid already exists...server already started ?";
-			echo "If you are sure the server is not running, delete tsserver2.pid"
-			exit 1
+		stat_busy "Starting  teamspeak2 server"
+		if [ -e /var/run/tss2_rc2/tsserver2.pid ]; then
+			echo "tsserver2.pid already exists...server already started?";
+			echo "If you are sure the server is not running, delete /var/run/tss2_rc2/tsserver2.pid"
+			stat_fail
 		else
-			if [ "$UID" = "0" ]; then
-				echo WARNING ! For security reasons we advise: DO NOT RUN THE SERVER AS ROOT
-				for c in $(seq 1 10); do
-					echo -n "!"
-					sleep 1
-				done
-				echo !
-			fi
-			echo "starting the teamspeak2 server"
-			if [ -e server_linux ]; then
-				if [ ! -x server_linux ]; then
-					echo "server_linux is not executable, trying to set it"
-					chmod u+x server_linux
-				fi
-				if [ -x server_linux ]; then
-					./server_linux -PID=tsserver2.pid
+			if [ -e /opt/tss2_rc2/server_linux ]; then
+				if [ -x /opt/tss2_rc2/server_linux ]; then
+					echo "Setting owner/group on /opt/tss2_rc2"
+					(chown -R $TSS2_USER /opt/tss2_rc2 && chgrp -R $TSS2_USER /opt/tss2_rc2) || exit 2
+					chown -R $TSS2_USER /var/run/tss2_rc2
+					
+					su $TSS2_USER -c '/opt/tss2_rc2/server_linux -PID=/var/run/tss2_rc2/tsserver2.pid'
+					if [ ! -z "$PID" -o $? -gt 0 ]; then
+      						stat_fail
+    					else
+						add_daemon tss2d
+						stat_done
+					fi
 				else
 					echo "server_linux is not executable, fix this"
-					exit 4
+					stat_fail
 				fi
 			else
 				echo "Couldnt find server_linux"
-				exit 5
+				stat_fail
 			fi
 		fi
 	;;
     stop)
-		if [ -e tsserver2.pid ]; then
-			echo -n "stopping the teamspeak2 server"
-			if ( kill -TERM `cat tsserver2.pid` ); then
+		stat_busy "Stopping teamspeak2 server"
+		if [ -e /var/run/tss2_rc2/tsserver2.pid ]; then
+			if ( kill -TERM `cat /var/run/tss2_rc2/tsserver2.pid` ); then
 				for c in $(seq 1 300); do
-					if [ -e tsserver2.pid ]; then
-						echo -n "."
+					if [ -e /var/run/tss2_rc2/tsserver2.pid ]; then
 						sleep 1
 					fi
 				done
 			fi
-			if [ -e tsserver2.pid ]; then
+			if [ -e /var/run/tss2_rc2/tsserver2.pid ]; then
 				echo "server does not shutdown cleanly - killing"
-				kill -KILL `cat tsserver2.pid`
-				rm tsserver2.pid
+				kill -KILL `cat /var/run/tss2_rc2/tsserver2.pid`
+				rm /var/run/tss2_rc2/tsserver2.pid
 				sleep 5
+				rm_daemon tss2d
+				stat_done
 			else
-				echo "done"
+				rm_daemon tss2d
+				stat_done
 			fi
 		else
-			echo "tsserver2.pid is missing, no started server ?"
-			exit 7
+			stat_fail
 		fi
 	;;
 	restart)
 		$0 stop && $0 start || exit 1
 	;;
-	status)
-		if [ -e tsserver2.pid ]; then
-			echo "the server seems to be running"
-			exit 0
-		else
-			echo "the server seems to be stopped"
-			exit 3
-		fi
-	;;
-	passwords)
-		if [ -e server.log ]; then
-			date=$(cat server.log | grep "admin account info: username: admin" | tail -n 1 | sed "s/^\([0-9]\+-[0-9]\+-[0-9]\+ [0-9]\+:[0-9]\+:[0-9]\+\).*$/\1/")
-			spass=$(cat server.log | grep "superadmin account info: username: superadmin" | tail -n 1 | sed "s/^.*username: superadmin password: \([a-z0-9]\+\).*$/\1/")
-			pass=$(cat server.log | grep "admin account info: username: admin" | tail -n 1 | sed "s/^.*username: admin password: \([a-z0-9]\+\).*$/\1/")
-			echo "Following passwords were generated on $date"
-			echo "superadmin = \"$spass\""
-			echo "admin      = \"$pass\""
-		else
-			echo "server.log not found, maybe you did not start the server yet ?" 
-			exit 1
-		fi
-	;;
 	*)
-		echo "Usage: $0 {start|stop|restart|status|passwords}"
-		exit 2
+		echo "Usage: $0 {start|stop|restart}"
 esac
-exit 0
